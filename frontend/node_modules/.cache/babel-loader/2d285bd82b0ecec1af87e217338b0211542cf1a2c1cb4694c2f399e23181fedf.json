{"ast":null,"code":"import _defineProperty from\"C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";function getToken(){var token=localStorage.getItem('jwt');return token;}export var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl;_classCallCheck(this,Api);this.baseUrl=baseUrl;}//Метод для обработки ошибке в запросе\n_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}//Функция создания запроса\n},{key:\"_request\",value:function _request(url,options){return fetch(\"\".concat(this.baseUrl)+\"\".concat(url),options).then(this._checkResponse);}//Метод для запроса карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return this._request(\"/cards\",{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'}});}//Метод для запроса текущего пользователя с сервера\n},{key:\"getUserInfo\",value:function getUserInfo(){return this._request(\"/users/me\",{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'}});}//Метод для обновления данных пользователя на сервере\n},{key:\"editingProfile\",value:function editingProfile(_ref2){var name=_ref2.name,about=_ref2.about;return this._request(\"/users/me\",{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'},method:'PATCH',body:JSON.stringify({name:name,about:about})});}//Метод для добавления карточки пользователя на сервер\n},{key:\"setUserCard\",value:function setUserCard(_ref3){var _this$_request;var name=_ref3.name,link=_ref3.link;return this._request(\"/cards\",(_this$_request={headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'},method:'POST'},_defineProperty(_this$_request,\"headers\",this.headers),_defineProperty(_this$_request,\"body\",JSON.stringify({name:name,link:link})),_this$_request));}//Метод для удаления карточки пользователя с сервера\n},{key:\"deleteCard\",value:function deleteCard(id){return this._request(\"/cards/\".concat(id,\"/\"),{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'},method:'DELETE'});}//Метод для добавления лайка пользователя на сервер\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(!isLiked){return this._request(\"/cards/\".concat(id,\"/likes\"),{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'},method:'PUT'});}else{return this._request(\"/cards/\".concat(id,\"/likes\"),{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'},method:'DELETE'});}}//Метод для изменения аватара пользователя на сервере\n},{key:\"setAvatar\",value:function setAvatar(url){return this._request(\"/users/me/avatar\",{headers:{authorization:\"Bearer \".concat(getToken()),'Content-Type':'application/json'},method:'PATCH',body:JSON.stringify({avatar:url})});}}]);return Api;}();var api=new Api({baseUrl:'https://api.romantikhonov.mesto.nomoredomainsmonster.ru'});export default api;","map":{"version":3,"names":["getToken","token","localStorage","getItem","Api","_ref","baseUrl","_classCallCheck","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","url","options","fetch","then","getInitialCards","headers","authorization","getUserInfo","editingProfile","_ref2","name","about","method","body","JSON","stringify","setUserCard","_ref3","_this$_request","link","_defineProperty","deleteCard","id","changeLikeCardStatus","isLiked","setAvatar","avatar","api"],"sources":["C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["\r\nfunction getToken(){\r\n    const token = localStorage.getItem('jwt');\r\n    return token;\r\n}\r\n export class Api {\r\n    constructor({ baseUrl }) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n\r\n    //Метод для обработки ошибке в запросе\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    //Функция создания запроса\r\n    _request(url, options) {\r\n        return fetch(`${this.baseUrl}` + `${url}`, options).then(this._checkResponse)\r\n\r\n    }\r\n\r\n    //Метод для запроса карточек с сервера\r\n    getInitialCards() {\r\n        return this._request(`/cards`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    //Метод для запроса текущего пользователя с сервера\r\n    getUserInfo() {\r\n        return this._request(`/users/me`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    //Метод для обновления данных пользователя на сервере\r\n    editingProfile({name, about}) {\r\n        return this._request(`/users/me`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n        }\r\n\r\n    //Метод для добавления карточки пользователя на сервер\r\n    setUserCard({name, link}) {\r\n        return this._request(`/cards`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    link: link\r\n                })\r\n        })\r\n        }\r\n\r\n    //Метод для удаления карточки пользователя с сервера\r\n    deleteCard(id) {\r\n        return this._request(`/cards/${id}/`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n        }\r\n\r\n    //Метод для добавления лайка пользователя на сервер\r\n    changeLikeCardStatus(id , isLiked) {\r\n        if (!isLiked) \r\n            { return this._request(`/cards/${id}/likes`, {\r\n                headers: {\r\n                    authorization: `Bearer ${getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n             method: 'PUT',\r\n         }) } else  {\r\n            return this._request(`/cards/${id}/likes`, {\r\n                headers: {\r\n                    authorization: `Bearer ${getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'DELETE',\r\n            })\r\n         }\r\n        }\r\n\r\n\r\n    //Метод для изменения аватара пользователя на сервере\r\n    setAvatar(url) {\r\n        return this._request(`/users/me/avatar`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                avatar: url\r\n            })\r\n        })\r\n        }\r\n\r\n}\r\n\r\n\r\n const api = new Api({\r\n    baseUrl: 'https://api.romantikhonov.mesto.nomoredomainsmonster.ru',\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}