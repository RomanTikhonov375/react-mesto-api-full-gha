{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roman\\\\dev\\\\react-mesto-api-full-gha\\\\frontend\\\\src\\\\components\\\\DeleteConfirmationPopup.jsx\";\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeleteConfirmationPopup(props) {\n  const isDirty = true; // Костыль , для сдачи работы, после проверки переделаю все формы с помощью react-hook-form\n  const isValid = true; // Костыль , для сдачи работы, после проверки переделаю все формы с помощью react-hook-form\n\n  function handleDelete(e) {\n    console.log(props);\n    e.preventDefault();\n    props.onCardDelete(props.card, props.setCards);\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    onSubmit: handleDelete,\n    isDirty: isDirty,\n    isValid: isValid,\n    buttonText: !props.isLoading ? 'Да' : 'Удаление...',\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    name: \"delete-popup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = DeleteConfirmationPopup;\nvar _c;\n$RefreshReg$(_c, \"DeleteConfirmationPopup\");","map":{"version":3,"names":["React","PopupWithForm","jsxDEV","_jsxDEV","DeleteConfirmationPopup","props","isDirty","isValid","handleDelete","e","console","log","preventDefault","onCardDelete","card","setCards","onSubmit","buttonText","isLoading","isOpen","onClose","title","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/src/components/DeleteConfirmationPopup.jsx"],"sourcesContent":["import React from \"react\"\r\nimport PopupWithForm from \"./PopupWithForm.jsx\"\r\n\r\nexport default function DeleteConfirmationPopup(props) {\r\n       \r\n        const isDirty = true; // Костыль , для сдачи работы, после проверки переделаю все формы с помощью react-hook-form\r\n        const isValid = true; // Костыль , для сдачи работы, после проверки переделаю все формы с помощью react-hook-form\r\n\r\n        function handleDelete(e) {\r\n            console.log(props)\r\n            e.preventDefault();\r\n            props.onCardDelete(props.card, props.setCards)\r\n        }\r\n\r\n        \r\n    return (\r\n        <PopupWithForm\r\n        onSubmit={handleDelete}\r\n        isDirty={isDirty}\r\n        isValid={isValid}\r\n        buttonText={!props.isLoading ? 'Да' : 'Удаление...'}\r\n        isOpen={props.isOpen}\r\n        onClose={props.onClose}\r\n        title=\"Вы уверены?\"\r\n        name=\"delete-popup\"\r\n      />\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EAE/C,MAAMC,OAAO,GAAG,IAAI,CAAC,CAAC;EACtB,MAAMC,OAAO,GAAG,IAAI,CAAC,CAAC;;EAEtB,SAASC,YAAYA,CAACC,CAAC,EAAE;IACrBC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;IAClBI,CAAC,CAACG,cAAc,CAAC,CAAC;IAClBP,KAAK,CAACQ,YAAY,CAACR,KAAK,CAACS,IAAI,EAAET,KAAK,CAACU,QAAQ,CAAC;EAClD;EAGJ,oBACIZ,OAAA,CAACF,aAAa;IACde,QAAQ,EAAER,YAAa;IACvBF,OAAO,EAAEA,OAAQ;IACjBC,OAAO,EAAEA,OAAQ;IACjBU,UAAU,EAAE,CAACZ,KAAK,CAACa,SAAS,GAAG,IAAI,GAAG,aAAc;IACpDC,MAAM,EAAEd,KAAK,CAACc,MAAO;IACrBC,OAAO,EAAEf,KAAK,CAACe,OAAQ;IACvBC,KAAK,EAAC,0DAAa;IACnBC,IAAI,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAER;AAACC,EAAA,GAxBuBvB,uBAAuB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}