{"ast":null,"code":"import _defineProperty from\"C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";export var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this.baseUrl=baseUrl;this.headers=headers;}//Метод для обработки ошибке в запросе\n_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}//Функция создания запроса\n},{key:\"_request\",value:function _request(url,options){return fetch(\"\".concat(this.baseUrl)+\"\".concat(url),options).then(this._checkResponse);}//Метод для запроса карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return this._request(\"/cards\",{headers:this.headers});}//Метод для запроса текущего пользователя с сервера\n},{key:\"getUserInfo\",value:function getUserInfo(){return this._request(\"/users/me\",{headers:this.headers});}//Метод для обновления данных пользователя на сервере\n},{key:\"editingProfile\",value:function editingProfile(_ref2){var name=_ref2.name,about=_ref2.about;return this._request(\"/users/me\",{headers:this.headers,method:'PATCH',body:JSON.stringify({name:name,about:about})});}//Метод для добавления карточки пользователя на сервер\n},{key:\"setUserCard\",value:function setUserCard(_ref3){var _this$_request;var name=_ref3.name,link=_ref3.link;return this._request(\"/cards\",(_this$_request={headers:this.headers,method:'POST'},_defineProperty(_this$_request,\"headers\",this.headers),_defineProperty(_this$_request,\"body\",JSON.stringify({name:name,link:link})),_this$_request));}//Метод для удаления карточки пользователя с сервера\n},{key:\"deleteCard\",value:function deleteCard(id){return this._request(\"/cards/\".concat(id,\"/\"),{headers:this.headers,method:'DELETE'});}//Метод для добавления лайка пользователя на сервер\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(!isLiked){return this._request(\"/cards/\".concat(id,\"/likes\"),{headers:this.headers,method:'PUT'});}else{return this._request(\"/cards/\".concat(id,\"/likes\"),{headers:this.headers,method:'DELETE'});}}//Метод для изменения аватара пользователя на сервере\n},{key:\"setAvatar\",value:function setAvatar(url){return this._request(\"/users/me/avatar\",{headers:this.headers,method:'PATCH',body:JSON.stringify({avatar:url})});}}]);return Api;}();var token=localStorage.getItem('jwt');var api=new Api({baseUrl:'https://api.romantikhonov.mesto.nomoredomainsmonster.ru',headers:{authorization:\"Bearer \".concat(token),'Content-Type':'application/json'}});export default api;","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","url","options","fetch","then","getInitialCards","getUserInfo","editingProfile","_ref2","name","about","method","body","JSON","stringify","setUserCard","_ref3","_this$_request","link","_defineProperty","deleteCard","id","changeLikeCardStatus","isLiked","setAvatar","avatar","token","localStorage","getItem","api","authorization"],"sources":["C:/Users/Roman/dev/react-mesto-api-full-gha/frontend/src/utils/Api.js"],"sourcesContent":["\r\n export class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this.baseUrl = baseUrl;\r\n        this.headers = headers;\r\n    }\r\n\r\n\r\n    //Метод для обработки ошибке в запросе\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    //Функция создания запроса\r\n    _request(url, options) {\r\n        return fetch(`${this.baseUrl}` + `${url}`, options).then(this._checkResponse)\r\n\r\n    }\r\n\r\n    //Метод для запроса карточек с сервера\r\n    getInitialCards() {\r\n        return this._request(`/cards`, {\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n    //Метод для запроса текущего пользователя с сервера\r\n    getUserInfo() {\r\n        return this._request(`/users/me`, {\r\n            headers: this.headers\r\n        })\r\n    }\r\n\r\n    //Метод для обновления данных пользователя на сервере\r\n    editingProfile({name, about}) {\r\n        return this._request(`/users/me`, {\r\n            headers: this.headers,\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n        }\r\n\r\n    //Метод для добавления карточки пользователя на сервер\r\n    setUserCard({name, link}) {\r\n        return this._request(`/cards`, {\r\n            headers: this.headers,\r\n            method: 'POST',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    link: link\r\n                })\r\n        })\r\n        }\r\n\r\n    //Метод для удаления карточки пользователя с сервера\r\n    deleteCard(id) {\r\n        return this._request(`/cards/${id}/`, {\r\n            headers: this.headers,\r\n            method: 'DELETE',\r\n        })\r\n        }\r\n\r\n    //Метод для добавления лайка пользователя на сервер\r\n    changeLikeCardStatus(id , isLiked) {\r\n        if (!isLiked) \r\n            { return this._request(`/cards/${id}/likes`, {\r\n                headers: this.headers,\r\n             method: 'PUT',\r\n         }) } else  {\r\n            return this._request(`/cards/${id}/likes`, {\r\n                headers: this.headers,\r\n                method: 'DELETE',\r\n            })\r\n         }\r\n        }\r\n\r\n\r\n    //Метод для изменения аватара пользователя на сервере\r\n    setAvatar(url) {\r\n        return this._request(`/users/me/avatar`, {\r\n            headers: this.headers,\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                avatar: url\r\n            })\r\n        })\r\n        }\r\n\r\n}\r\n\r\nconst token = localStorage.getItem('jwt');\r\n\r\n const api = new Api({\r\n    baseUrl: 'https://api.romantikhonov.mesto.nomoredomainsmonster.ru',\r\n    headers: {\r\n        authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}