[{"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\index.js":"1","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\App.jsx":"2","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.jsx":"3","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.jsx":"4","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.jsx":"5","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.jsx":"6","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.jsx":"7","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.jsx":"8","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.jsx":"9","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\DeleteConfirmationPopup.jsx":"10","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRouteElement.jsx":"11","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.jsx":"12","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\auth.js":"13","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js":"14","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.jsx":"15","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\context\\CurrentUserContext.jsx":"16","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.jsx":"17","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.jsx":"18","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.jsx":"19"},{"size":365,"mtime":1697308449996,"results":"20","hashOfConfig":"21"},{"size":9129,"mtime":1701988967764,"results":"22","hashOfConfig":"21"},{"size":302,"mtime":1696881709761,"results":"23","hashOfConfig":"21"},{"size":2130,"mtime":1701834210306,"results":"24","hashOfConfig":"21"},{"size":222,"mtime":1694708331989,"results":"25","hashOfConfig":"21"},{"size":2991,"mtime":1697828573858,"results":"26","hashOfConfig":"21"},{"size":1648,"mtime":1697912134431,"results":"27","hashOfConfig":"21"},{"size":2544,"mtime":1697922121528,"results":"28","hashOfConfig":"21"},{"size":594,"mtime":1697828641081,"results":"29","hashOfConfig":"21"},{"size":1041,"mtime":1697742983468,"results":"30","hashOfConfig":"21"},{"size":264,"mtime":1701925419319,"results":"31","hashOfConfig":"21"},{"size":3170,"mtime":1697743280048,"results":"32","hashOfConfig":"21"},{"size":1269,"mtime":1701940153168,"results":"33","hashOfConfig":"21"},{"size":3978,"mtime":1701980299936,"results":"34","hashOfConfig":"21"},{"size":2969,"mtime":1697743262839,"results":"35","hashOfConfig":"21"},{"size":88,"mtime":1695926785790,"results":"36","hashOfConfig":"21"},{"size":713,"mtime":1697743783424,"results":"37","hashOfConfig":"21"},{"size":965,"mtime":1701925458923,"results":"38","hashOfConfig":"21"},{"size":1532,"mtime":1701835909967,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"quzpxz",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\index.js",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\App.jsx",["105"],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Header.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Main.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditProfilePopup.jsx",["106","107"],[],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.jsx\";\r\nimport { CurrentUserContext } from '../../src/context/CurrentUserContext';\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport default function EditProfilePopup(props) {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    const {register, handleSubmit, formState:{ errors, isDirty, isValid }, clearErrors,reset, setValue} = useForm({mode: 'onChange'});\r\n\r\n    const nameRegister = register('name', {\r\n      required: {\r\n        value: true,\r\n        message: 'Обязательное поле'\r\n      },\r\n      minLength: {\r\n        value: 2,\r\n        message: 'Минимальное число символов : 2'\r\n      },\r\n      maxLength: {\r\n        value: 40,\r\n        message: 'Максимальное число символов: 40'\r\n      }\r\n    })\r\n\r\n    const aboutRegister = register('about', {\r\n        required: {\r\n            value: true,\r\n            message: 'Обязательное поле'\r\n          },\r\n          minLength: {\r\n            value: 2,\r\n            message: 'Минимальное число символов : 2'\r\n          },\r\n          maxLength: {\r\n            value: 40,\r\n            message: 'Максимальное число символов: 200'\r\n          }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        reset()\r\n        setValue(\"name\", currentUser.name)\r\n        setValue(\"about\", currentUser.about)\r\n    }, [currentUser, props.isOpen]);\r\n\r\n\r\n    function handleSubmitForm(data) {\r\n        props.onUpdateUser({\r\n            name: data.name,\r\n            about: data.about\r\n        });\r\n    }\r\n\r\n    function handleClose() {\r\n        props.onClose();\r\n        clearErrors(['name','about'])\r\n    }\r\n\r\n \r\n\r\n    return (\r\n        <PopupWithForm\r\n            buttonText={!props.isLoading ? 'Сохранить' : 'Сохранение...'}\r\n            isDirty={isDirty}\r\n            isValid={isValid}\r\n            onSubmit={handleSubmit(handleSubmitForm)}\r\n            title=\"Редактировать профиль\"\r\n            name=\"edit-profile\"\r\n            isOpen={props.isOpen}\r\n            onClose={handleClose}\r\n        >\r\n            <input type=\"text\" className=\"popup__input popup__input_type_name\" id=\"user-name\" name=\"name\"\r\n                placeholder=\"Введите ваше имя\" {...nameRegister} />\r\n            <span id=\"card-link-error\" className={`popup__input-error ${errors.name ? 'popup__input-error_active' : ''}`}>{errors.name ? errors.name.message: ''}</span>\r\n            <input type=\"text\" className=\"popup__input popup__input_type_career\" id=\"user-career\" name=\"about\"\r\n                placeholder=\"Введите ваше призвание\" {...aboutRegister} />\r\n            <span id=\"card-link-error\" className={`popup__input-error ${errors.about ? 'popup__input-error_active' : ''}`}>{errors.about ? errors.about.message: ''}</span>\r\n        </PopupWithForm>\r\n    )\r\n}","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\EditAvatarPopup.jsx",["108","109","110","111","112","113"],[],"import React from \"react\"\r\nimport PopupWithForm from \"./PopupWithForm.jsx\"\r\nimport { useForm } from 'react-hook-form'\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport default function EditAvatarPopup(props) {\r\n\r\n  const { register, handleSubmit, formState: { errors, isDirty, isValid }, clearErrors, reset } = useForm();\r\n\r\n\r\n  const linkRegister = register('link', {\r\n    pattern: {\r\n      value: /^[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/,\r\n      message: 'Тут должна быть ссылка'\r\n    },\r\n    required: {\r\n      value: true,\r\n      message: 'Обязательное поле'\r\n    }\r\n  })\r\n\r\n\r\n  const handleSubmitForm = (data) => {\r\n    props.onUpdateAvatar(data.link);\r\n  }\r\n\r\n  function handleClose() {\r\n    props.onClose();\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    clearErrors('link')\r\n    reset({ 'link': '' })\r\n  }, [props.isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      isDirty={isDirty}\r\n      isValid={isValid}\r\n      buttonText={!props.isLoading ? 'Сохранить' : 'Сохранение...'}\r\n      onSubmit={handleSubmit(handleSubmitForm)}\r\n      isOpen={props.isOpen}\r\n      onClose={handleClose}\r\n      title=\"Обновить аватар\"\r\n      name=\"edit-avatar\"\r\n    >\r\n      <input type=\"url\" className=\"popup__input popup__input_type_link\" id=\"card-avatar-link\" name=\"link\"\r\n        placeholder=\"Ссылка на картинку\" {...linkRegister} />\r\n      <span id=\"card-link-error\" className={`popup__input-error ${errors.link ? 'popup__input-error_active' : ''}`}>{errors.link ? errors.link.message : ''}</span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\AddPlacePopup.jsx",["114","115","116","117","118","119"],[],"import PopupWithForm from \"./PopupWithForm.jsx\";\r\nimport { useForm } from 'react-hook-form'\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function AddPlacePopup(props) {\r\n \r\n    const {register, handleSubmit, formState:{ errors, isDirty, isValid }, clearErrors,reset,  } = useForm({mode: 'onChange'});\r\n\r\n    const nameRegister = register('name', {\r\n      required: {\r\n        value: true,\r\n        message: 'Обязательное поле'\r\n      },\r\n      minLength: {\r\n        value: 2,\r\n        message: 'Минимальное число символов : 2'\r\n      },\r\n      maxLength: {\r\n        value: 30,\r\n        message: 'Максимальное число символов: 30'\r\n      }\r\n    })\r\n\r\n    const linkRegister = register('link', {\r\n      required: {\r\n        value: true,\r\n        message: 'Обязательное поле'\r\n      },\r\n      pattern: {\r\n        value: /^[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/,\r\n        message: 'Тут должна быть ссылка'\r\n      },\r\n      \r\n    })\r\n   \r\n    const handleSubmitForm = (data) => {\r\n        props.onAddPlace ({  \r\n            name: data.name,\r\n            link: data.link\r\n        }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n      clearErrors([\"name\", \"link\"]);\r\n      reset({ link: \"\", name: \"\" });\r\n    }, [props.isOpen]); \r\n  \r\n\r\n\r\n\r\n   function handleClose() {\r\n    clearErrors(['name','link'])\r\n    props.onClose();\r\n   \r\n   }\r\n    return (\r\n        <PopupWithForm\r\n        isDirty={isDirty}\r\n        isValid={isValid}\r\n        onSubmit={handleSubmit(handleSubmitForm)}\r\n        title=\"Новое место\"\r\n        name=\"edit-card\"\r\n        buttonText={!props.isLoading ? 'Создать' : 'Создание...'}\r\n        isOpen={props.isOpen}\r\n        onClose={handleClose}>\r\n        <input type=\"text\" className=\"popup__input popup__input_type_place\" id=\"card-place\" \r\n          placeholder=\"Название\" {...nameRegister} />\r\n        <span id=\"card-place-error\" className={`popup__input-error ${errors.name ? 'popup__input-error_active' : ''}`}>{errors.name ? errors.name.message: ''}</span>\r\n        <input type=\"text\" className=\"popup__input popup__input_type_link\" id=\"card-link\" \r\n          placeholder=\"Ссылка на картинку\" {...linkRegister} />\r\n        <span id=\"card-link-error\" className={`popup__input-error ${errors.link ? 'popup__input-error_active' : ''}`}>{errors.link ? errors.link.message: ''}</span>\r\n      </PopupWithForm>\r\n    );\r\n\r\n}","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ImagePopup.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\DeleteConfirmationPopup.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\ProtectedRouteElement.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Register.jsx",["120","121"],[],"import React from 'react';\r\nimport Header from './Header';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport default function Register(props) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { register, handleSubmit, formState: { errors, isDirty, isValid }, clearErrors, reset } = useForm({ mode: 'onChange' });\r\n\r\n    const emailRegister = register('email', {\r\n        required: {\r\n            value: true,\r\n            message: 'Обязательное поле'\r\n        },\r\n        pattern: {\r\n            value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n            message: 'Введите email'\r\n        }\r\n\r\n    })\r\n\r\n    const passwordRegister = register('password', {\r\n\r\n        required: {\r\n            value: true,\r\n            message: 'Обязательное поле'\r\n        },\r\n        minLength: {\r\n            value: 2,\r\n            message: 'Минимальное число символов : 2'\r\n        },\r\n        maxLength: {\r\n            value: 10,\r\n            message: 'Максимальное число символов: 10'\r\n        }\r\n    })\r\n\r\n    const handleSubmitForm = (data) => {\r\n        props.onRegister({\r\n            email: data.email,\r\n            password: data.password\r\n        }).then(() => {\r\n            navigate('/sign-in');\r\n            reset();\r\n\r\n        })\r\n            .catch(console.error);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <NavLink to='/sign-in' className={'header__link opacity'}>Вход</NavLink>\r\n            </Header>\r\n            <div className={'login'}>\r\n                <div className=\"login__container\">\r\n                    <h2 className=\"login__heading\">Регистрация</h2>\r\n                    <form action=\"#\" className='login__form' name='register' onSubmit={handleSubmit(handleSubmitForm)}>\r\n                        <input type=\"email\" className=\"login__input\" id=\"user-email\" name=\"email\"\r\n                            placeholder=\"Введите ваш email\" {...emailRegister} />\r\n                        <span id=\"card-link-error\" className={`login__input-error ${errors.email ? 'login__input-error_active' : ''}`}>{errors.email ? errors.email.message : ''}</span>\r\n                        <input type=\"password\" className=\"login__input\" id=\"user-password\" name=\"password\"\r\n                            placeholder=\"Введите ваше пароль\" {...passwordRegister} />\r\n                        <span id=\"card-link-error\" className={`login__input-error ${errors.password ? 'login__input-error_active' : ''}`}>{errors.password ? errors.password.message : ''}</span>\r\n                        <button disabled={!isDirty || !isValid} type=\"submit\" className={`login__submit-btn ${!isDirty || !isValid ? 'popup__submit-btn_inactive' : ''}`}>Зарегистрироваться</button>\r\n\r\n                    </form>\r\n                    <p className='login__caption'>Уже зарегистрированы? <NavLink to='/sign-in' className={'login__caption opacity'}>Войти</NavLink></p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\auth.js",["122"],[],"export const BASE_URL = 'https://api.romantikhonov.mesto.nomoredomainsmonster.ru'\r\n\r\n\r\nconst checkResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    } else {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n}\r\n\r\n//Функция создания запроса\r\nconst request = (url, options) => {\r\n    return fetch(`${BASE_URL}` + `${url}`, options).then(checkResponse)\r\n}\r\n\r\nexport const register = ({ password, email }) => {\r\n    return request(`/signup`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email\r\n        })\r\n    })\r\n}\r\n\r\n\r\nexport const login = ({ password, email }) => {\r\n    return request(`/signin`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            password: password,\r\n            email: email\r\n        })\r\n    })\r\n}\r\n\r\nexport const checkToken = (jwt) => {\r\n    return request(`/users/me`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${jwt}`\r\n        },\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\n","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\utils\\Api.js",["123"],[],"\r\nfunction getToken() {\r\n    const token = localStorage.getItem('jwt');\r\n    return token;\r\n}\r\nexport class Api {\r\n    constructor({ baseUrl }) {\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n\r\n    //Метод для обработки ошибке в запросе\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    //Функция создания запроса\r\n    _request(url, options) {\r\n        return fetch(`${this.baseUrl}` + `${url}`, options).then(this._checkResponse)\r\n\r\n    }\r\n\r\n    //Метод для запроса карточек с сервера\r\n    getInitialCards() {\r\n        return this._request(`/cards`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    //Метод для запроса текущего пользователя с сервера\r\n    getUserInfo() {\r\n        return this._request(`/users/me`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    //Метод для обновления данных пользователя на сервере\r\n    editingProfile({ name, about }) {\r\n        return this._request(`/users/me`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n    }\r\n\r\n    //Метод для добавления карточки пользователя на сервер\r\n    setUserCard({ name, link }) {\r\n        return this._request(`/cards`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        })\r\n    }\r\n\r\n    //Метод для удаления карточки пользователя с сервера\r\n    deleteCard(id) {\r\n        return this._request(`/cards/${id}/`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n    }\r\n\r\n    //Метод для добавления лайка пользователя на сервер\r\n    changeLikeCardStatus(id, isLiked) {\r\n        if (!isLiked) {\r\n            return this._request(`/cards/${id}/likes`, {\r\n                headers: {\r\n                    authorization: `Bearer ${getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'PUT',\r\n            })\r\n        } else {\r\n            return this._request(`/cards/${id}/likes`, {\r\n                headers: {\r\n                    authorization: `Bearer ${getToken()}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                method: 'DELETE',\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    //Метод для изменения аватара пользователя на сервере\r\n    setAvatar(url) {\r\n        return this._request(`/users/me/avatar`, {\r\n            headers: {\r\n                authorization: `Bearer ${getToken()}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                avatar: url\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://api.romantikhonov.mesto.nomoredomainsmonster.ru',\r\n});\r\n\r\nexport default api;\r\n","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Login.jsx",["124","125"],[],"import React from 'react';\r\nimport Header from './Header';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form'\r\n\r\n\r\nexport default function Login({ onLogin }) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { register, handleSubmit, formState: { errors, isDirty, isValid }, clearErrors, reset } = useForm({ mode: 'onChange' });\r\n\r\n    const emailRegister = register('email', {\r\n        required: {\r\n            value: true,\r\n            message: 'Обязательное поле'\r\n        },\r\n        pattern: {\r\n            value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n            message: 'Введите email'\r\n        }\r\n\r\n    })\r\n\r\n    const passwordRegister = register('password', {\r\n\r\n        required: {\r\n            value: true,\r\n            message: 'Обязательное поле'\r\n        },\r\n        minLength: {\r\n            value: 2,\r\n            message: 'Минимальное число символов : 2'\r\n        },\r\n        maxLength: {\r\n            value: 10,\r\n            message: 'Максимальное число символов: 10'\r\n        }\r\n    })\r\n\r\n    const handleSubmitForm = (data) => {\r\n        onLogin({\r\n            email: data.email,\r\n            password: data.password\r\n        }\r\n\r\n        ).then(() => {\r\n            navigate('/');\r\n            reset();\r\n        })\r\n            .catch(console.error);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Header>\r\n                <NavLink to='/sign-up' className={'header__link opacity'}>Регистрация</NavLink>\r\n            </Header>\r\n            <div className={'login'}>\r\n                <div className=\"login__container\">\r\n                    <h2 className=\"login__heading\">Вход</h2>\r\n                    <form action=\"#\" className='login__form' name='login' onSubmit={handleSubmit(handleSubmitForm)}>\r\n                        <input type=\"email\" className=\"login__input\" id=\"user-email\" name=\"email\"\r\n                            placeholder=\"Введите ваш email\" {...emailRegister} />\r\n                        <span id=\"card-link-error\" className={`login__input-error ${errors.email ? 'login__input-error_active' : ''}`}>{errors.email ? errors.email.message : ''}</span>\r\n                        <input type=\"password\" className=\"login__input\" id=\"user-password\" name=\"password\"\r\n                            placeholder=\"Введите ваше пароль\" {...passwordRegister} />\r\n                        <span id=\"card-link-error\" className={`login__input-error ${errors.password ? 'login__input-error_active' : ''}`}>{errors.password ? errors.password.message : ''}</span>\r\n                        <button disabled={!isDirty || !isValid} type=\"submit\" className={`login__submit-btn ${!isDirty || !isValid ? 'popup__submit-btn_inactive' : ''}`}>Войти</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\context\\CurrentUserContext.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\InfoTooltip.jsx",["126"],[],"import React from \"react\";\r\nimport unionSucsess from './../images/UnionSucsess.svg';\r\nimport unionError from './../images/UnionError.svg'\r\n\r\n\r\nexport default function InfoTooltip(props) {\r\n    return (\r\n\r\n        <div className={`popup  popup_background-color-opacity_05 popup_opened`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__close-btn opacity\" type=\"button\" aria-label=\"закрыть окно\" onClick={props.onClose}></button>\r\n                <img className=\"popup__request-status\" src={props.isSuccess ? unionSucsess : unionError} />\r\n                <h2 className=\"popup__heading\">{props.headingText}</h2>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}","C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\PopupWithForm.jsx",[],[],"C:\\Users\\Roman\\dev\\react-mesto-api-full-gha\\frontend\\src\\components\\Card.jsx",[],[],{"ruleId":"127","severity":1,"message":"128","line":115,"column":77,"nodeType":"129","messageId":"130","endLine":115,"endColumn":78,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":47,"column":8,"nodeType":"138","endLine":47,"endColumn":35,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"140","line":14,"column":28,"nodeType":"129","messageId":"130","endLine":14,"endColumn":29,"suggestions":"141"},{"ruleId":"127","severity":1,"message":"140","line":14,"column":30,"nodeType":"129","messageId":"130","endLine":14,"endColumn":31,"suggestions":"142"},{"ruleId":"127","severity":1,"message":"143","line":14,"column":36,"nodeType":"129","messageId":"130","endLine":14,"endColumn":37,"suggestions":"144"},{"ruleId":"127","severity":1,"message":"145","line":14,"column":54,"nodeType":"129","messageId":"130","endLine":14,"endColumn":55,"suggestions":"146"},{"ruleId":"127","severity":1,"message":"145","line":14,"column":97,"nodeType":"129","messageId":"130","endLine":14,"endColumn":98,"suggestions":"147"},{"ruleId":"136","severity":1,"message":"148","line":36,"column":6,"nodeType":"138","endLine":36,"endColumn":20,"suggestions":"149"},{"ruleId":"127","severity":1,"message":"140","line":30,"column":30,"nodeType":"129","messageId":"130","endLine":30,"endColumn":31,"suggestions":"150"},{"ruleId":"127","severity":1,"message":"140","line":30,"column":32,"nodeType":"129","messageId":"130","endLine":30,"endColumn":33,"suggestions":"151"},{"ruleId":"127","severity":1,"message":"143","line":30,"column":38,"nodeType":"129","messageId":"130","endLine":30,"endColumn":39,"suggestions":"152"},{"ruleId":"127","severity":1,"message":"145","line":30,"column":56,"nodeType":"129","messageId":"130","endLine":30,"endColumn":57,"suggestions":"153"},{"ruleId":"127","severity":1,"message":"145","line":30,"column":99,"nodeType":"129","messageId":"130","endLine":30,"endColumn":100,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"148","line":47,"column":8,"nodeType":"138","endLine":47,"endColumn":22,"suggestions":"155"},{"ruleId":"132","severity":1,"message":"156","line":10,"column":78,"nodeType":"134","messageId":"135","endLine":10,"endColumn":89},{"ruleId":"127","severity":1,"message":"143","line":18,"column":26,"nodeType":"129","messageId":"130","endLine":18,"endColumn":27,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":14,"column":32,"nodeType":"160","messageId":"161","endLine":14,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":23,"column":40,"nodeType":"160","messageId":"161","endLine":23,"endColumn":41},{"ruleId":"132","severity":1,"message":"156","line":11,"column":78,"nodeType":"134","messageId":"135","endLine":11,"endColumn":89},{"ruleId":"127","severity":1,"message":"143","line":19,"column":26,"nodeType":"129","messageId":"130","endLine":19,"endColumn":27,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":12,"column":17,"nodeType":"165","endLine":12,"endColumn":108},"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["166","167"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'reset' and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["168"],"Unnecessary escape character: \\/.",["169","170"],["171","172"],"Unnecessary escape character: \\..",["173","174"],"Unnecessary escape character: \\+.",["175","176"],["177","178"],"React Hook useEffect has missing dependencies: 'clearErrors' and 'reset'. Either include them or remove the dependency array.",["179"],["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],["190"],"'clearErrors' is assigned a value but never used.",["191","192"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["193","194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"messageId":"195","fix":"196","desc":"197"},{"messageId":"198","fix":"199","desc":"200"},{"desc":"201","fix":"202"},{"messageId":"195","fix":"203","desc":"197"},{"messageId":"198","fix":"204","desc":"200"},{"messageId":"195","fix":"205","desc":"197"},{"messageId":"198","fix":"206","desc":"200"},{"messageId":"195","fix":"207","desc":"197"},{"messageId":"198","fix":"208","desc":"200"},{"messageId":"195","fix":"209","desc":"197"},{"messageId":"198","fix":"210","desc":"200"},{"messageId":"195","fix":"211","desc":"197"},{"messageId":"198","fix":"212","desc":"200"},{"desc":"213","fix":"214"},{"messageId":"195","fix":"215","desc":"197"},{"messageId":"198","fix":"216","desc":"200"},{"messageId":"195","fix":"217","desc":"197"},{"messageId":"198","fix":"218","desc":"200"},{"messageId":"195","fix":"219","desc":"197"},{"messageId":"198","fix":"220","desc":"200"},{"messageId":"195","fix":"221","desc":"197"},{"messageId":"198","fix":"222","desc":"200"},{"messageId":"195","fix":"223","desc":"197"},{"messageId":"198","fix":"224","desc":"200"},{"desc":"213","fix":"225"},{"messageId":"195","fix":"226","desc":"197"},{"messageId":"198","fix":"227","desc":"200"},{"messageId":"195","fix":"228","desc":"197"},{"messageId":"198","fix":"229","desc":"200"},"removeEscape",{"range":"230","text":"231"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"232","text":"233"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [currentUser, props.isOpen, reset, setValue]",{"range":"234","text":"235"},{"range":"236","text":"231"},{"range":"237","text":"233"},{"range":"238","text":"231"},{"range":"239","text":"233"},{"range":"240","text":"231"},{"range":"241","text":"233"},{"range":"242","text":"231"},{"range":"243","text":"233"},{"range":"244","text":"231"},{"range":"245","text":"233"},"Update the dependencies array to be: [clearErrors, props.isOpen, reset]",{"range":"246","text":"247"},{"range":"248","text":"231"},{"range":"249","text":"233"},{"range":"250","text":"231"},{"range":"251","text":"233"},{"range":"252","text":"231"},{"range":"253","text":"233"},{"range":"254","text":"231"},{"range":"255","text":"233"},{"range":"256","text":"231"},{"range":"257","text":"233"},{"range":"258","text":"247"},{"range":"259","text":"231"},{"range":"260","text":"233"},{"range":"261","text":"231"},{"range":"262","text":"233"},[3532,3533],"",[3532,3532],"\\",[1364,1391],"[currentUser, props.isOpen, reset, setValue]",[411,412],[411,411],[413,414],[413,413],[419,420],[419,419],[437,438],[437,437],[480,481],[480,480],[858,872],"[clearErrors, props.isOpen, reset]",[839,840],[839,839],[841,842],[841,841],[847,848],[847,847],[865,866],[865,865],[908,909],[908,908],[1268,1282],[574,575],[574,574],[579,580],[579,579]]